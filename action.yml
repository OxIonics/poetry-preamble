name: 'Poetry preamble'
description: Common steps for actions that want to poetry run
inputs:
  INSTALL_ARGS:
    description: "Additional args to poetry install"
    required: false
  GHA_TOKEN:
    description: >-
      The read-only shared user GitHub token for checkout private
      repositories.
    required: false

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v2
      with:
        fetch-depth: 0
        submodules: recursive
        lfs: true

    - name: LFS checkout
      shell: bash
      run: git lfs checkout

    - name: Allow git dependencies
      if: ${{ github.ref != 'refs/heads/master' }}
      shell: bash
      run: |
        git config --global url."https://oxfordionics:${{ inputs.GHA_TOKEN }}@github.com".insteadOf ssh://git@github.com
        git config --global url."https://oxfordionics:${{ inputs.GHA_TOKEN }}@github.com/".insteadOf git@github.com:

    - name: Set default Rust toolchain
      shell: bash
      run: rustup default stable

    - name: Configure poetry virtualenv location
      shell: bash
      run: poetry config virtualenvs.in-project true

    - name: Get python version
      id: python-version
      shell: bash
      run: echo "version=$(python --version | sed 's/.* \([0-9]\+\.[0-9]\+\).*/\1/')" >> $GITHUB_OUTPUT

    - name: Cache virtualenv
      uses: actions/cache@v3
      with:
        path: ./.venv
        key: poetry-${{ runner.os }}-py${{ steps.python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-py${{ steps.python-version.outputs.version }}-${{ hashFiles('**/poetry.lock') }}
          poetry-${{ runner.os }}-py${{ steps.python-version.outputs.version }}-

    - name: Install
      shell: bash
      run: poetry install ${{ inputs.INSTALL_ARGS }}
