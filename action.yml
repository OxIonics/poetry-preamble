name: 'Poetry preamble'
description: Common steps for actions that want to poetry run
inputs:
  INSTALL_ARGS:
    description: "Additional args to poetry install"
    required: false
  GHA_TOKEN:
    description: >-
      The read-only shared user GitHub token for checkout private
      repositories.
    required: false
  PYTHON_VERSION:
    description: The python version to use
    required: false
    default: "3.10"

runs:
  using: "composite"
  steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0
        submodules: recursive
        lfs: true
        token: ${{ inputs.GHA_TOKEN }}

    - name: LFS checkout
      shell: bash
      run: git lfs checkout

    - name: Allow git dependencies
      if: ${{ github.ref != 'refs/heads/master' }}
      shell: bash
      run: |
        git config --global url."https://oxfordionics:${{ inputs.GHA_TOKEN }}@github.com".insteadOf ssh://git@github.com
        git config --global url."https://oxfordionics:${{ inputs.GHA_TOKEN }}@github.com/".insteadOf git@github.com:

    - name: Set default Rust toolchain
      shell: bash
      run: rustup default stable

    - name: Configure poetry virtualenv location
      shell: bash
      run: |
        poetry config virtualenvs.in-project true
        poetry env use ${{ inputs.PYTHON_VERSION }}

    - name: Cache virtualenv
      uses: actions/cache@v4
      with:
        path: ./.venv
        key: poetry-${{ runner.os }}-py${{ inputs.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}
        restore-keys: |
          poetry-${{ runner.os }}-py${{ inputs.PYTHON_VERSION }}-${{ hashFiles('**/poetry.lock') }}

    - name: Install
      shell: bash
      run: poetry install ${{ inputs.INSTALL_ARGS }} --sync
      env:
        PIP_REQUESTS_TIMEOUT: 300
        POETRY_REQUESTS_TIMEOUT: 300
